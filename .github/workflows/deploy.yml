name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/binance-proxy:latest
        
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.AWS_SSH_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
        
    - name: Add host to known_hosts
      run: ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to AWS
      run: |
        ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} << 'EOF'
          # Stop and remove existing container if it exists
          docker stop binance-proxy || true
          docker rm binance-proxy || true
          
          # Pull the latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/binance-proxy:latest
          
          # Create logs directory if it doesn't exist
          mkdir -p ~/logs
          
          # Run the new container
          docker run -d \
            --name binance-proxy \
            -p 3000:3000 \
            -v ~/logs:/app/logs \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/binance-proxy:latest
          
          # Check if container is running
          docker ps | grep binance-proxy
        EOF